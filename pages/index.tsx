import type { NextPage } from 'next';
import Head from 'next/head';

import { initializeApollo } from '../lib/client';
import TaskList from '../components/TaskList';
import TaskForm from '../components/TaskForm';
import {
  TasksDocument,
  TasksQuery,
  useTasksQuery,
} from '../generated/graphql-frontend';

const Home: NextPage = () => {
  const result = useTasksQuery();
  const tasks = result.data?.tasks;

  return (
    <div>
      <Head>
        <title>Next.js Task Mate App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <TaskForm onSuccess={result.refetch} />
      {result.loading ? (
        <p>Loading...</p>
      ) : result.error ? (
        <p>An error occured...</p>
      ) : tasks && tasks.length > 0 ? (
        <TaskList tasks={tasks} />
      ) : (
        <p className="no-tasks-message">
          You have no tasks: use the form to add more!
        </p>
      )}
    </div>
  );
};

export default Home;

export const getStaticProps = async () => {
  const apolloClient = initializeApollo();

  await apolloClient.query<TasksQuery>({
    query: TasksDocument,
  });

  return {
    props: {
      initialApolloState: apolloClient.cache.extract(),
    },
  };
};
